#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 68 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1           0 1814 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 83
(
 #"#reader(lib \"htdp-intermediate-reader.ss\" \"lang\")((modname falli"
 #"ng) (read-case-sens"
) 0 0 4 3 254
(
 #"itive #t) (teachpacks ((lib \"image.rkt\" \"teachpack\" \"2htdp\") ("
 #"lib \"universe.rkt\" \"teachpack\" \"2htdp\"))) (htdp-settings #(#t "
 #"constructor repeating-decimal #f #t none #f ((lib \"image.rkt\" \"te"
 #"achpack\" \"2htdp\") (lib \"universe.rkt\" \"teachpack\" \"2htdp\"))"
 #" #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 13 #";; a World is"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;   (make-world number        -- x coordinate of the paddle"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;               direction     -- which way the paddle is moving"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;               list-of-posn  -- faller positions"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;               number)       -- score"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Template for world"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"process"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"paddle-world"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 15 #"direction-world"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 13 #"fallers-world"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"score-world"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; a list-of-posn is either"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   - '()"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;   - (cons posn list-of-posn)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; a direction is either"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;   - \"left\""
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;   - \"right\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 17 3 16 #"; width of scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #") "
0 0 17 3 17 #"; height of scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")  "
0 0 17 3 17 #"; width of faller"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"faller-height"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 17 3 18 #"; height of faller"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 17 3 17 #"; width of paddle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"paddle-height"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 17 3 18 #"; height of paddle"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-image"
0 0 24 3 1 #" "
0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\362IDAT8\215\245\224mL\324\5\34"
 #"\307?\307\35w\340\35\310\311\241\240\300"
 #"!`\2\352\260\210j\250\320\224\204t"
 #"=\250=\b\e\325\254\27\275hZ\353\311\232\1\326r+[k\332\323z\260|"
 #"\230ck\211ez\31\5\370\320\203\210\2\212' \217\36\307I\4\336qO\34"
 #"w\374\177\275h\326\232\243{\321\367\365"
 #"\367\373\331o\373}\367U\211\210\20F\217m\253\5\355L\366U\256\fg%\""
 #"\234a\307''H\233\237F\220 U\3577\206\5j\302\31\\\30i\ri\211"
 #"\212Ig\315J\323\377\273p\336}_\260qm\n\367\2304d\306\371\271\322\337"
 #"Aj\305\21@\2316\243:\331\324)\5K3\370\352x+.%\226\254D8"
 #"\331\356\345\265MK\371\376W;\37]p\23\211\202c\310\300S\e\364\224/0"
 #"\240\213\326Q\271\273\201\322\242,\332{"
 #"\a\231\245\217\245$/\236\346n\17\352P\372\306\352}\3j\372\207\374hQ3"
 #"k\246\236\332\313\23\304\6Fx\367\210\r\313+\371X\32\6\311H\360\261uM"
 #"\6wm\332O~v2\365#\6T\276\0:\243\221\243]Nj\352\332\321\307"
 #"\231P\267\375\370y\265e\357wX}\311\370\r\32\34\327\306q\5\r\274Q\221"
 #"\305\326\17\255D\371G\350\322hh\0375\341\355h!\365\316;([\226\310\17"
 #"\27=\3649~\307g\324\321\245\304\263"
 #"*N\341\371G\226\20\201\b\t\3464"
 #"\316\277\225C\272\253\233\23=q\214\272"
 #"&\370\270\356\nO\257\233MCd\32\205\t1\334\233\343\343Lj.\256\353\1"
 #"\266\177\326\304\224Y\215=s1\231\36/\226\265z<\272\4\220"
 #")T7z\270\250\342 \245\17\227\262}\265\221s\315V\266\2367"
) 500
(
 #"\2606\326\211/\312\300\210m\24\2231"
 #"\232\345\371\251\234>u\231V\335\34,"
 #"O\244p\350\214\203\252\303NR\264\327"
 #"9\266\243\360\257\247\334\0\216\215O\20"
 #"\21\364\363\316\327\335\30g\350\270\32\21"
 #"\215;\b\267\317\234\244a\330\304\244N"
 #"\305\375\361^.\215{q\371\324,\212S\341\361*<^<\asr\374\315\265"
 #"in\355c\304=E\311\262\205\24\27"
 #"dr\245\327\315\342\245\251\230c\242\350"
 #"\37\271\316o\365W\311I\322`\v\350\261\215\353X\235\227LY\311\2L\372)"
 #"\276\251\357\272\31X]\323\317\246\375v"
 #"\334!\37]\326\v8<\n\330\35\\\262\331y}C\nO\256\216\301\352\17Q"
 #"\230\34\"\240\32510<\206\345x="
 #"\5U\255X\235\252\177\3K\237\373\226\237?(\3466\225\215O;\23\371\2623"
 #"\201]\25i\270\3\n\rI\371\324\326"
 #"\17\242\16:\261\270\f\4|\223l\311"
 #"\323\261\363\227\0\307\264\253\330\\\234F"
 #"\331\302 w?s\354\37`\274\214\261rW\20un\21\221\235\347P\334.V"
 #",2q\240\246\215\35IN\206gE"
 #"\22\231\265\204u\223\16v\36\262\261\276"
 #"\300D\341|\r\211\356\16Z4j\266\215eP^b\6@\335\330;\257:y"
 #"y\21\212s\214\354\230\0\17-\237Mo\20\374\203v\nr\347R\272\302LO"
 #"s\17\256q//<\272\230\323g\257"
 #"\221\235\244\341\324\300\4\267\32U,H"
 #"\230\301\305\323}\234\34\16\321t\326\1"
 #"\203\303n\21\219\\\337+\326>\247\234h\261\313\220'$\"\"{\16\326I"
 #"\342\252\335\262\276v@^\375C\244\262"
 #"\356\2524\266]\23\21\221\3u}\"\212\"{\216v\313\360\250OB\201I\t"
 #"L\6\5\231V\212\224\276\334(\"\"\317\276\335(\233\337;'?\265\f"
 #"\311\213\a\254\"\241\340\264\251\277{8"
 #"\235\36\334R\303\331\36\27\306\271sy"
) 67
(
 #"\240$\2077\327\233A5\375\352\205\5"
 #"\266u\215\262\327\322\201\323\343\347\245\362"
 #"<\262\346\e\377\313\36~\261so\211G\2537P\230\227\36\26\6"
 #"\360'b\224\2?\35\347\313A\0\0\0\0IEND\256B`\202"
) 0 0 24 3 2 #") "
0 0 17 3 17 #"; image of faller"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-image"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 14 3 13 #"paddle-height"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")) "
0 0 17 3 17 #"; image of paddle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"EMPTY"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 3 #")) "
0 0 17 3 13 #"; empty scene"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; draw : worldState -> Scene"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; renders the list of fallers, paddle, and score of the world"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; (define (draw w) ...)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; - (make-world 100 \"right\" '() 0)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; renders"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 57 #" paddle in the bottom-center of the scene and score of 0."
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; - (make-world 50 \"right\" (list (make-posn 10 10) (make-posn 50 "
 #"10)) 40)"
) 0 0 24 29 1 #"\n"
0 0 17 3 113
(
 #";; renders a paddle with 50 pixels away from the bottom-left, faller"
 #"s at (10, 10), and (50, 10), and score of 40."
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Strategy : Function composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"place-images"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Score"
0 0 19 3 4 #" : \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"paddle-height"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 5 #"EMPTY"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 6           4 57 2622
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 288 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 50 0 0 0) #(struct:pulled-point 0 0 50 12 0 0) #(struct:pulled-poin"
 #"t 0 0 0 12 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 300"
 #") #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 121.5 12.0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 4.5 8.0 #(struct:text \"S\" 0 1 \"blue\" 1"
 #"4 #f swiss normal normal #f))) #(struct:translate 9.0 0.0 #(struct:t"
 #"ranslate 3.5 8.0 #(struct:text \"c\" 0 1 \"blue\" 14 #f swiss normal"
 #" normal #f))))) #(struct:translate 16.0 0.0 #(struct:translate 4.0 8"
 #".0 #(struct:text \"o\" 0 1 \"blue\" 14 #f swiss normal normal #f))))"
 #") #(struct:translate 24.0 0.0 #(struct:translate 2.5 8.0 #(struct:te"
 #"xt \"r\" 0 1 \"blue\" 14 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 29.0 0.0 #(struct:translat"
 #"e 4.0 8.0 #(struct:text \"e\" 0 1 \"blue\" 14 #f swiss normal normal"
 #" #f))))) #(struct:translate 37.0 0.0 #(struct:translate 2.0 8.0 #(st"
 #"ruct:text \" \" 0 1 \"blue\" 14 #f swiss normal normal #f))))) #(str"
 #"uct:translate 41.0 0.0 #(struct:t"
 #"ranslate 2.0 8.0 #(struct:text \":\" 0 1 \"blue\" 14 #f swiss normal"
 #" normal #f))))) #(struct:translate 45.0 0.0 #(struct:translate 2.0 8"
 #".0 #(struct:text \" \" 0 1 \"blue\" 14 #f swiss normal normal #f))))"
 #") #(struct:translate 49.0 0.0 #(struct:translate 4.0 8.0 #(struct:te"
 #"xt \"0\" 0 1 \"blue\" 14 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 200 0) "
 #"#(struct:point 200 300) #(struct:point 0 300)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 300 0 0) #(struct:p"
 #"ulled-point 0 0 0 300 0 0)) outline #(struct:pen \"black\" 2 solid r"
 #"ound round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 200 0 0 0) #(struct:pulled-point 0 0 200 300 0 0) #(struct:pulle"
 #"d-point 0 0 0 300 0 0)) 255 \"white\")))))))))))))) #(struct:bb 200 "
 #"300 300.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 2 #"40"
0 0 24 3 3 #")) "
0 6           4 57 15209
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 25 288 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 50 0 0 0) #(struct:pulled-point 0 0 50 12 0 0) #(struct:pulled-poin"
 #"t 0 0 0 12 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 300"
 #") #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 117.5 12.0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 4."
 #"5 8.0 #(struct:text \"S\" 0 1 \"blue\" 14 #f swiss normal normal #f)"
 #")) #(struct:translate 9.0 0.0 #(struct:translate 3.5 8.0 #(struct:te"
 #"xt \"c\" 0 1 \"blue\" 14 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 16.0 0.0 #(struct:translat"
 #"e 4.0 8.0 #(struct:text \"o\" 0 1 \"blue\" 14 #f swiss normal normal"
 #" #f))))) #(struct:translate 24.0 0.0 #(struct:translate 2.5 8.0 #(st"
 #"ruct:text \"r\" 0 1 \"blue\" 14 #f swiss normal normal #f))))) #(str"
 #"uct:translate 29.0 0.0 #(struct:t"
 #"ranslate 4.0 8.0 #(struct:text \"e\" 0 1 \"blue\" 14 #f swiss normal"
 #" normal #f))))) #(struct:translate 37.0 0.0 #(struct:translate 2.0 8"
 #".0 #(struct:text \" \" 0 1 \"blue\" 14 #f swiss normal normal #f))))"
 #") #(struct:translate 41.0 0.0 #(struct:translate 2.0 8.0 #(struct:te"
 #"xt \":\" 0 1 \"blue\" 14 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 45.0 0.0 #(struct:translat"
 #"e 2.0 8.0 #(struct:text \" \" 0 1 \"blue\" 14 #f swiss normal normal"
 #" #f))))) #(struct:translate 49.0 0.0 #(struct:translate 4.0 8.0 #(st"
 #"ruct:text \"4\" 0 1 \"blue\" 14 #f swiss normal normal #f))))) #(str"
 #"uct:translate 57.0 0.0 #(struct:t"
 #"ranslate 4.0 8.0 #(struct:text \"0\" 0 1 \"blue\" 14 #f swiss normal"
 #" normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 200 0) #(struct:point 200 300) #(struct:point 0"
 #" 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 10 10 #(struct:bitmap #(#\"\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377]{\\2"
 #"56\\377]\\201\\275\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\205\\231\\300\\377}\\234\\316\\377X\\201\\2"
 #"70\\377~\\223\\277\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\377v\\231\\321\\377F\\230\\327\\37"
 #"7N\\216\\332\\377\\310\\325\\356\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"2L\\236\\377\\316\\344\\356\\377\\213\\254\\333\\377r\\236\\321\\377"
 #"\\243\\265\\306\\377\\35\\\\\\262\\377\\377\\377\\375\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\302\\312\\331\\377\\374\\372\\374\\377\\247\\263\\314\\377"
 #"\\230\\261\\332\\377\\300\\311\\332\\377\\202\\235\\317\\377\\377\\3"
 #"77\\377\\377\\267\\306\\344\\377N\\230\\327\\377S\\230\\325\\377:~\\"
 #"341\\377\\236\\321\\354\\377\\370\\366\\370\\377\\377\\377\\377\\377"
 #"}\\222\\276\\377\\305\\321\\346\\377\\231\\257\\312\\377\\253\\272\\"
 #"330\\377\\362\\355\\353\\377\\276\\311\\337\\377]\\207\\304\\377N\\2"
 #"41\\343\\377Z\\220\\316\\377\\177\\240\\327\\377\\261\\303\\343\\377"
 #"H\\207\\321\\377\\261\\274\\323\\377Bt\\276\\377\\377\\377\\377\\377"
 #"`\\212\\316\\377p\\231\\315\\377\\"
 #"377\\377\\377\\3773\\\\\\236\\377\\316\\326\\352\\377c\\237\\340\\37"
 #"7\\225\\256\\334\\377\\236\\277\\344\\377Y\\226\\316\\377M|\\260\\37"
 #"7\\220\\262\\333\\377\\377\\377\\377\\377]q\\245\\3771v\\325\\377O\\"
 #"227\\332\\377g\\225\\320\\377H\\211\\334\\377\\377\\377\\377\\377\\3"
 #"0O\\264\\377\\223\\236\\304\\377S\\230\\315\\3775\\205\\341\\377\\21"
 #"7\\232\\277\\377\\177\\262\\344\\3"
 #"77\\377\\377\\377\\377k\\242\\343\\377_\\217\\311\\377t\\270\\335\\3"
 #"77@\\245\\350\\377\\211\\240\\312\\377\\377\\377\\377\\377\\377\\376"
 #"\\376\\377r\\220\\305\\377\\377\\377\\377\\377q\\210\\266\\377(r\\34"
 #"0\\3775z\\324\\377\\227\\272\\332\\377\\200\\240\\312\\377R\\243\\34"
 #"4\\377\\221\\255\\332\\377~\\257\\327\\377X\\270\\356\\377p\\241\\33"
 #"5\\377\\200\\233\\311\\377h\\301\\346\\377D\\263\\365\\377\\230\\254"
 #"\\322\\377\\367\\360\\363\\377}\\247\\337\\377\\377\\376\\374\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377*\\\\\\245\\377r\\261\\355\\37"
 #"7\\363\\367\\376\\377\\300\\303\\3"
 #"24\\3778\\221\\340\\377\\203\\237\\320\\377y\\247\\334\\377d\\212\\3"
 #"11\\377x\\233\\322\\377\\264\\320\\360\\377x\\223\\307\\377H\\232\\3"
 #"36\\377\\377\\372\\373\\377\\255\\303\\342\\377,s\\322\\377Iy\\301\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\355\\361\\367\\377\\357\\354\\356\\377{\\231\\312\\"
 #"377\\214\\243\\321\\377n\\245\\332\\377a\\240\\332\\377\\225\\257\\3"
 #"24\\377T\\230\\350\\377N\\237\\351\\377\\234\\262\\336\\377q\\244\\3"
 #"23\\377b\\232\\326\\377\\215\\252\\327\\377\\201\\237\\325\\377\\340"
 #"\\343\\354\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\271\\301\\326\\377\\332\\337\\353\\377\\302\\324\\361"
 #"\\377\\320\\335\\365\\377I\\203\\315\\377\\215\\320\\370\\377\\264\\"
 #"274\\334\\3774\\203\\327\\377\\26]\\313\\377\\306\\313\\342\\377T\\2"
 #"35\\336\\377E\\214\\335\\377\\323\\335\\363\\377\\332\\346\\372\\377"
 #"\\364\\356\\351\\377\\260\\275\\331\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3779i\\266\\377<\\2"
 #"02\\320\\377\\265\\320\\347\\377\\252\\263\\307\\3770w\\313\\377\\21"
 #"5\\265\\337\\377\\211\\237\\301\\3"
 #"77\\266\\326\\364\\377y\\243\\330\\377\\234\\302\\336\\377\\222\\271"
 #"\\332\\377>\\222\\344\\377\\264\\306\\341\\377\\221\\237\\270\\377.m"
 #"\\271\\377\\206\\255\\332\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377Gp\\261\\377\\376\\376\\372\\377n\\203\\263\\3"
 #"77P\\251\\377\\377J\\214\\334\\377\\302\\324\\353\\377\\200\\256\\33"
 #"5\\377H\\270\\366\\377e\\224\\330\\377|\\236\\310\\377S\\263\\352\\3"
 #"77\\213\\257\\324\\377\\255\\305\\353\\377?\\214\\332\\377G\\245\\37"
 #"3\\377\\234\\261\\331\\377\\337\\324\\325\\377?k\\265\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377Zo\\237\\377@\\220\\365\\377q\\262\\36"
 #"2\\377U\\202\\314\\377H\\177\\315\\377\\377\\377\\377\\377$V\\256\\3"
 #"77\\316\\321\\346\\377N\\246\\335\\377\\201\\306\\365\\377\\244\\255"
 #"\\321\\377\\26]\\267\\377\\377\\37"
 #"7\\377\\377}\\255\\336\\377_\\230\\323\\377k\\265\\334\\377[\\302\\3"
 #"70\\377\\231\\262\\324\\377\\377\\377\\377\\377?]\\232\\377h\\242\\3"
 #"33\\377R\\211\\326\\377\\212\\252\\335\\377\\303\\322\\352\\377c\\24"
 #"3\\333\\377\\250\\265\\322\\377\\240\\264\\332\\377\\377\\377\\377\\"
 #"377\\203\\236\\313\\377s\\244\\325\\377\\377\\377\\377\\377Ny\\303\\"
 #"377\\317\\325\\345\\377i\\242\\331\\377\\225\\256\\327\\377\\245\\30"
 #"6\\343\\377S\\210\\314\\3778\\206\\314\\377e\\215\\314\\377\\344\\35"
 #"1\\363\\377\\377\\377\\377\\377\\260\\276\\336\\377\\326\\337\\360\\"
 #"377\\301\\317\\345\\377\\346\\364\\374\\377\\377\\377\\377\\377\\236"
 #"\\246\\273\\377\\30C\\223\\377R\\257\\341\\377z\\354\\377\\377~\\273"
 #"\\342\\377\\300\\321\\350\\377\\377\\377\\377\\377\\244\\273\\337\\3"
 #"77\\377\\376\\376\\377\\236\\265\\"
 #"334\\377\\351\\355\\366\\377\\374\\371\\372\\377\\371\\372\\373\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\376\\377Hw\\300\\377\\377\\377\\377\\3"
 #"77p\\212\\300\\377n\\220\\315\\377\\275\\317\\346\\377u\\244\\326\\3"
 #"77\\377\\374\\373\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377On\\247\\377\\32K\\230\\377+e\\262\\37"
 #"7z\\254\\334\\377\\377\\376\\373\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"20\\331\\354\\377q\\220\\304\\377a\\204\\273\\377\\327\\336\\356\\37"
 #"7\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377w\\233\\320\\377\\237\\267\\335\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\377\\377\" 20 20) 0 1 1 #hash())))"
 #" #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 200 0) #(struct:point 200 300) #(struct:point 0 300)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 40 0 #(struct:tra"
 #"nslate 10 10 #(struct:bitmap #(#\"\\377\\377\\377\\377\\377\\377\\37"
 #"7\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377]{\\256\\377]\\201\\275\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\205\\231\\300\\377}\\23"
 #"4\\316\\377X\\201\\270\\377~\\223\\277\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377v\\231\\321"
 #"\\377F\\230\\327\\377N\\216\\332\\"
 #"377\\310\\325\\356\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\32L\\236\\377\\"
 #"316\\344\\356\\377\\213\\254\\333\\377r\\236\\321\\377\\243\\265\\30"
 #"6\\377\\35\\\\\\262\\377\\377\\377\\375\\377\\377\\377\\377\\377\\37"
 #"7\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\302\\312\\331\\377\\374\\372\\374\\377"
 #"\\247\\263\\314\\377\\230\\261\\332\\377\\300\\311\\332\\377\\202\\2"
 #"35\\317\\377\\377\\377\\377\\377\\267\\306\\344\\377N\\230\\327\\377"
 #"S\\230\\325\\377:~\\341\\377\\236\\321\\354\\377\\370\\366\\370\\377"
 #"\\377\\377\\377\\377}\\222\\276\\377\\305\\321\\346\\377\\231\\257\\"
 #"312\\377\\253\\272\\330\\377\\362\\355\\353\\377\\276\\311\\337\\377"
 #"]\\207\\304\\377N\\241\\343\\377Z\\220\\316\\377\\177\\240\\327\\377"
 #"\\261\\303\\343\\377H\\207\\321\\377\\261\\274\\323\\377Bt\\276\\377"
 #"\\377\\377\\377\\377`\\212\\316\\3"
 #"77p\\231\\315\\377\\377\\377\\377\\3773\\\\\\236\\377\\316\\326\\352"
 #"\\377c\\237\\340\\377\\225\\256\\3"
 #"34\\377\\236\\277\\344\\377Y\\226\\316\\377M|\\260\\377\\220\\262\\3"
 #"33\\377\\377\\377\\377\\377]q\\245\\3771v\\325\\377O\\227\\332\\377g"
 #"\\225\\320\\377H\\211\\334\\377\\377\\377\\377\\377\\30O\\264\\377\\"
 #"223\\236\\304\\377S\\230\\315\\3775\\205\\341\\377\\217\\232\\277\\3"
 #"77\\177\\262\\344\\377\\377\\377\\377\\377k\\242\\343\\377_\\217\\31"
 #"1\\377t\\270\\335\\377@\\245\\350\\377\\211\\240\\312\\377\\377\\377"
 #"\\377\\377\\377\\376\\376\\377r\\2"
 #"20\\305\\377\\377\\377\\377\\377q\\"
 #"210\\266\\377(r\\340\\3775z\\324\\"
 #"377\\227\\272\\332\\377\\200\\240\\312\\377R\\243\\344\\377\\221\\25"
 #"5\\332\\377~\\257\\327\\377X\\270\\356\\377p\\241\\335\\377\\200\\23"
 #"3\\311\\377h\\301\\346\\377D\\263\\365\\377\\230\\254\\322\\377\\367"
 #"\\360\\363\\377}\\247\\337\\377\\377\\376\\374\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377*\\\\\\245\\377r\\261\\355\\377\\363\\367\\37"
 #"6\\377\\300\\303\\324\\3778\\221\\340\\377\\203\\237\\320\\377y\\247"
 #"\\334\\377d\\212\\311\\377x\\233\\322\\377\\264\\320\\360\\377x\\223"
 #"\\307\\377H\\232\\336\\377\\377\\372\\373\\377\\255\\303\\342\\377,s"
 #"\\322\\377Iy\\301\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\355\\361\\367\\377\\357\\354\\356\\377{\\231\\312\\377\\214\\243\\"
 #"321\\377n\\245\\332\\377a\\240\\332\\377\\225\\257\\324\\377T\\230\\"
 #"350\\377N\\237\\351\\377\\234\\262\\336\\377q\\244\\323\\377b\\232\\"
 #"326\\377\\215\\252\\327\\377\\201\\237\\325\\377\\340\\343\\354\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"271\\301\\326\\377\\332\\337\\353\\377\\302\\324\\361\\377\\320\\335"
 #"\\365\\377I\\203\\315\\377\\215\\3"
 #"20\\370\\377\\264\\274\\334\\3774\\203\\327\\377\\26]\\313\\377\\306"
 #"\\313\\342\\377T\\235\\336\\377E\\"
 #"214\\335\\377\\323\\335\\363\\377\\332\\346\\372\\377\\364\\356\\351"
 #"\\377\\260\\275\\331\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\3779i\\266\\377<\\202\\320\\377\\2"
 #"65\\320\\347\\377\\252\\263\\307\\3770w\\313\\377\\215\\265\\337\\37"
 #"7\\211\\237\\301\\377\\266\\326\\3"
 #"64\\377y\\243\\330\\377\\234\\302\\336\\377\\222\\271\\332\\377>\\22"
 #"2\\344\\377\\264\\306\\341\\377\\221\\237\\270\\377.m\\271\\377\\206"
 #"\\255\\332\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377Gp\\261\\377\\376\\376\\372\\377n\\203\\263\\377P\\251\\377\\"
 #"377J\\214\\334\\377\\302\\324\\353\\377\\200\\256\\335\\377H\\270\\3"
 #"66\\377e\\224\\330\\377|\\236\\310\\377S\\263\\352\\377\\213\\257\\3"
 #"24\\377\\255\\305\\353\\377?\\214\\332\\377G\\245\\373\\377\\234\\26"
 #"1\\331\\377\\337\\324\\325\\377?k\\265\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377Zo\\237\\377@\\220\\365\\377q\\262\\362\\377U\\202\\3"
 #"14\\377H\\177\\315\\377\\377\\377\\377\\377$V\\256\\377\\316\\321\\3"
 #"46\\377N\\246\\335\\377\\201\\306\\365\\377\\244\\255\\321\\377\\26]"
 #"\\267\\377\\377\\377\\377\\377}\\255\\336\\377_\\230\\323\\377k\\265"
 #"\\334\\377[\\302\\370\\377\\231\\262\\324\\377\\377\\377\\377\\377?]"
 #"\\232\\377h\\242\\333\\377R\\211\\"
 #"326\\377\\212\\252\\335\\377\\303\\322\\352\\377c\\243\\333\\377\\25"
 #"0\\265\\322\\377\\240\\264\\332\\377\\377\\377\\377\\377\\203\\236\\"
 #"313\\377s\\244\\325\\377\\377\\377\\377\\377Ny\\303\\377\\317\\325\\"
 #"345\\377i\\242\\331\\377\\225\\256\\327\\377\\245\\306\\343\\377S\\2"
 #"10\\314\\3778\\206\\314\\377e\\215\\314\\377\\344\\351\\363\\377\\37"
 #"7\\377\\377\\377\\260\\276\\336\\377\\326\\337\\360\\377\\301\\317\\"
 #"345\\377\\346\\364\\374\\377\\377\\377\\377\\377\\236\\246\\273\\377"
 #"\\30C\\223\\377R\\257\\341\\377z\\354\\377\\377~\\273\\342\\377\\300"
 #"\\321\\350\\377\\377\\377\\377\\377\\244\\273\\337\\377\\377\\376\\3"
 #"76\\377\\236\\265\\334\\377\\351\\"
 #"355\\366\\377\\374\\371\\372\\377\\371\\372\\373\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\377\\377\\377\\376\\377Hw\\300\\37"
 #"7\\377\\377\\377\\377p\\212\\300\\377n\\220\\315\\377\\275\\317\\346"
 #"\\377u\\244\\326\\377\\377\\374\\373\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377On\\247\\377\\32K\\230\\377+e\\262\\377z\\254\\334\\3"
 #"77\\377\\376\\373\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\320\\331\\354\\3"
 #"77q\\220\\304\\377a\\204\\273\\377\\327\\336\\356\\377\\377\\377\\37"
 #"7\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377w\\233\\320\\377\\237\\267\\335\\377\\377\\377\\"
 #"377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377"
 #"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\3"
 #"77\\377\\377\\377\\377\\377\" 20 20) 0 1 1 #hash()))) #(struct:trans"
 #"late 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #("
 #"struct:point 200 300) #(struct:point 0 300)) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 300 0 0) #(struct:pul"
 #"led-point 0 0 0 300 0 0)) outline #(struct:pen \"black\" 2 solid rou"
 #"nd round)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 200 0 0 0) #(struct:pulled-point 0 0 200 300 0 0) #(struct:pulled-"
 #"point 0 0 0 300 0 0)) 255 \"white\")))))))))))))))))))))) #(struct:b"
 #"b 200 300 300.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; get-faller-images : list of images -> list of images"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Creates list of current faller images"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (define (get-faller-images l) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; - Given (list (make-posn 10 10)), returns list of 1 faller image."
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";; - Given (list (make-posn 10 30) (make-posn 10 50), returns list o"
 #"f 2 faller images."
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Strategy : Decision tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-image"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\362IDAT8\215\245\224mL\324\5\34"
 #"\307?\307\35w\340\35\310\311\241\240\300"
 #"!`\2\352\260\210j\250\320\224\204t"
 #"=\250=\b\e\325\254\27\275hZ\353\311\232\1\326r+[k\332\323z\260|"
 #"\230ck\211ez\31\5\370\320\203\210\2\212' \217\36\307I\4\336qO\34"
 #"w\374\177\275h\326\232\243{\321\367\365"
 #"\367\373\331o\373}\367U\211\210\20F\217m\253\5\355L\366U\256\fg%\""
 #"\234a\307''H\233\237F\220 U\3577\206\5j\302\31\\\30i\ri\211"
 #"\212Ig\315J\323\377\273p\336}_\260qm\n\367\2304d\306\371\271\322\337"
 #"Aj\305\21@\2316\243:\331\324)\5K3\370\352x+.%\226\254D8"
 #"\331\356\345\265MK\371\376W;\37]p\23\211\202c\310\300S\e\364\224/0"
 #"\240\213\326Q\271\273\201\322\242,\332{"
 #"\a\231\245\217\245$/\236\346n\17\352P\372\306\352}\3j\372\207\374hQ3"
 #"k\246\236\332\313\23\304\6Fx\367\210\r\313+\371X\32\6\311H\360\261uM"
 #"\6wm\332O~v2\365#\6T\276\0:\243\221\243]Nj\352\332\321\307"
 #"\231P\267\375\370y\265e\357wX}\311\370\r\32\34\327\306q\5\r\274Q\221"
 #"\305\326\17\255D\371G\350\322hh\0375\341\355h!\365\316;([\226\310\17"
 #"\27=\3649~\307g\324\321\245\304\263"
 #"*N\341\371G\226\20\201\b\t\3464"
 #"\316\277\225C\272\253\233\23=q\214\272"
 #"&\370\270\356\nO\257\233MCd\32\205\t1\334\233\343\343Lj.\256\353\1"
 #"\266\177\326\304\224Y\215=s1\231\36/\226\265z<\272\4\220"
 #")T7z\270\250\342 \245\17\227\262}\265\221s\315V\266\2367"
) 500
(
 #"\2606\326\211/\312\300\210m\24\2231"
 #"\232\345\371\251\234>u\231V\335\34,"
 #"O\244p\350\214\203\252\303NR\264\327"
 #"9\266\243\360\257\247\334\0\216\215O\20"
 #"\21\364\363\316\327\335\30g\350\270\32\21"
 #"\215;\b\267\317\234\244a\330\304\244N"
 #"\305\375\361^.\215{q\371\324,\212S\341\361*<^<\asr\374\315\265"
 #"in\355c\304=E\311\262\205\24\27"
 #"dr\245\327\315\342\245\251\230c\242\350"
 #"\37\271\316o\365W\311I\322`\v\350\261\215\353X\235\227LY\311\2L\372)"
 #"\276\251\357\272\31X]\323\317\246\375v"
 #"\334!\37]\326\v8<\n\330\35\\\262\331y}C\nO\256\216\301\352\17Q"
 #"\230\34\"\240\32510<\206\345x="
 #"\5U\255X\235\252\177\3K\237\373\226\237?(\3466\225\215O;\23\371\2623"
 #"\201]\25i\270\3\n\rI\371\324\326"
 #"\17\242\16:\261\270\f\4|\223l\311"
 #"\323\261\363\227\0\307\264\253\330\\\234F"
 #"\331\302 w?s\354\37`\274\214\261rW\20un\21\221\235\347P\334.V"
 #",2q\240\246\215\35IN\206gE"
 #"\22\231\265\204u\223\16v\36\262\261\276"
 #"\300D\341|\r\211\356\16Z4j\266\215eP^b\6@\335\330;\257:y"
 #"y\21\212s\214\354\230\0\17-\237Mo\20\374\203v\nr\347R\272\302LO"
 #"s\17\256q//<\272\230\323g\257"
 #"\221\235\244\341\324\300\4\267\32U,H"
 #"\230\301\305\323}\234\34\16\321t\326\1"
 #"\203\303n\21\219\\\337+\326>\247\234h\261\313\220'$\"\"{\16\326I"
 #"\342\252\335\262\276v@^\375C\244\262"
 #"\356\2524\266]\23\21\221\3u}\"\212\"{\216v\313\360\250OB\201I\t"
 #"L\6\5\231V\212\224\276\334(\"\"\317\276\335(\233\337;'?\265\f"
 #"\311\213\a\254\"\241\340\264\251\277{8"
 #"\235\36\334R\303\331\36\27\306\271sy"
) 67
(
 #"\240$\2077\327\233A5\375\352\205\5"
 #"\266u\215\262\327\322\201\323\343\347\245\362"
 #"<\262\346\e\377\313\36~\261so\211G\2537P\230\227\36\26\6"
 #"\360'b\224\2?\35\347\313A\0\0\0\0IEND\256B`\202"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\362IDAT8\215\245\224mL\324\5\34"
 #"\307?\307\35w\340\35\310\311\241\240\300"
 #"!`\2\352\260\210j\250\320\224\204t"
 #"=\250=\b\e\325\254\27\275hZ\353\311\232\1\326r+[k\332\323z\260|"
 #"\230ck\211ez\31\5\370\320\203\210\2\212' \217\36\307I\4\336qO\34"
 #"w\374\177\275h\326\232\243{\321\367\365"
 #"\367\373\331o\373}\367U\211\210\20F\217m\253\5\355L\366U\256\fg%\""
 #"\234a\307''H\233\237F\220 U\3577\206\5j\302\31\\\30i\ri\211"
 #"\212Ig\315J\323\377\273p\336}_\260qm\n\367\2304d\306\371\271\322\337"
 #"Aj\305\21@\2316\243:\331\324)\5K3\370\352x+.%\226\254D8"
 #"\331\356\345\265MK\371\376W;\37]p\23\211\202c\310\300S\e\364\224/0"
 #"\240\213\326Q\271\273\201\322\242,\332{"
 #"\a\231\245\217\245$/\236\346n\17\352P\372\306\352}\3j\372\207\374hQ3"
 #"k\246\236\332\313\23\304\6Fx\367\210\r\313+\371X\32\6\311H\360\261uM"
 #"\6wm\332O~v2\365#\6T\276\0:\243\221\243]Nj\352\332\321\307"
 #"\231P\267\375\370y\265e\357wX}\311\370\r\32\34\327\306q\5\r\274Q\221"
 #"\305\326\17\255D\371G\350\322hh\0375\341\355h!\365\316;([\226\310\17"
 #"\27=\3649~\307g\324\321\245\304\263"
 #"*N\341\371G\226\20\201\b\t\3464"
 #"\316\277\225C\272\253\233\23=q\214\272"
 #"&\370\270\356\nO\257\233MCd\32\205\t1\334\233\343\343Lj.\256\353\1"
 #"\266\177\326\304\224Y\215=s1\231\36/\226\265z<\272\4\220"
 #")T7z\270\250\342 \245\17\227\262}\265\221s\315V\266\2367"
) 500
(
 #"\2606\326\211/\312\300\210m\24\2231"
 #"\232\345\371\251\234>u\231V\335\34,"
 #"O\244p\350\214\203\252\303NR\264\327"
 #"9\266\243\360\257\247\334\0\216\215O\20"
 #"\21\364\363\316\327\335\30g\350\270\32\21"
 #"\215;\b\267\317\234\244a\330\304\244N"
 #"\305\375\361^.\215{q\371\324,\212S\341\361*<^<\asr\374\315\265"
 #"in\355c\304=E\311\262\205\24\27"
 #"dr\245\327\315\342\245\251\230c\242\350"
 #"\37\271\316o\365W\311I\322`\v\350\261\215\353X\235\227LY\311\2L\372)"
 #"\276\251\357\272\31X]\323\317\246\375v"
 #"\334!\37]\326\v8<\n\330\35\\\262\331y}C\nO\256\216\301\352\17Q"
 #"\230\34\"\240\32510<\206\345x="
 #"\5U\255X\235\252\177\3K\237\373\226\237?(\3466\225\215O;\23\371\2623"
 #"\201]\25i\270\3\n\rI\371\324\326"
 #"\17\242\16:\261\270\f\4|\223l\311"
 #"\323\261\363\227\0\307\264\253\330\\\234F"
 #"\331\302 w?s\354\37`\274\214\261rW\20un\21\221\235\347P\334.V"
 #",2q\240\246\215\35IN\206gE"
 #"\22\231\265\204u\223\16v\36\262\261\276"
 #"\300D\341|\r\211\356\16Z4j\266\215eP^b\6@\335\330;\257:y"
 #"y\21\212s\214\354\230\0\17-\237Mo\20\374\203v\nr\347R\272\302LO"
 #"s\17\256q//<\272\230\323g\257"
 #"\221\235\244\341\324\300\4\267\32U,H"
 #"\230\301\305\323}\234\34\16\321t\326\1"
 #"\203\303n\21\219\\\337+\326>\247\234h\261\313\220'$\"\"{\16\326I"
 #"\342\252\335\262\276v@^\375C\244\262"
 #"\356\2524\266]\23\21\221\3u}\"\212\"{\216v\313\360\250OB\201I\t"
 #"L\6\5\231V\212\224\276\334(\"\"\317\276\335(\233\337;'?\265\f"
 #"\311\213\a\254\"\241\340\264\251\277{8"
 #"\235\36\334R\303\331\36\27\306\271sy"
) 67
(
 #"\240$\2077\327\233A5\375\352\205\5"
 #"\266u\215\262\327\322\201\323\343\347\245\362"
 #"<\262\346\e\377\313\36~\261so\211G\2537P\230\227\36\26\6"
 #"\360'b\224\2?\35\347\313A\0\0\0\0IEND\256B`\202"
) 0 2          17 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\362IDAT8\215\245\224mL\324\5\34"
 #"\307?\307\35w\340\35\310\311\241\240\300"
 #"!`\2\352\260\210j\250\320\224\204t"
 #"=\250=\b\e\325\254\27\275hZ\353\311\232\1\326r+[k\332\323z\260|"
 #"\230ck\211ez\31\5\370\320\203\210\2\212' \217\36\307I\4\336qO\34"
 #"w\374\177\275h\326\232\243{\321\367\365"
 #"\367\373\331o\373}\367U\211\210\20F\217m\253\5\355L\366U\256\fg%\""
 #"\234a\307''H\233\237F\220 U\3577\206\5j\302\31\\\30i\ri\211"
 #"\212Ig\315J\323\377\273p\336}_\260qm\n\367\2304d\306\371\271\322\337"
 #"Aj\305\21@\2316\243:\331\324)\5K3\370\352x+.%\226\254D8"
 #"\331\356\345\265MK\371\376W;\37]p\23\211\202c\310\300S\e\364\224/0"
 #"\240\213\326Q\271\273\201\322\242,\332{"
 #"\a\231\245\217\245$/\236\346n\17\352P\372\306\352}\3j\372\207\374hQ3"
 #"k\246\236\332\313\23\304\6Fx\367\210\r\313+\371X\32\6\311H\360\261uM"
 #"\6wm\332O~v2\365#\6T\276\0:\243\221\243]Nj\352\332\321\307"
 #"\231P\267\375\370y\265e\357wX}\311\370\r\32\34\327\306q\5\r\274Q\221"
 #"\305\326\17\255D\371G\350\322hh\0375\341\355h!\365\316;([\226\310\17"
 #"\27=\3649~\307g\324\321\245\304\263"
 #"*N\341\371G\226\20\201\b\t\3464"
 #"\316\277\225C\272\253\233\23=q\214\272"
 #"&\370\270\356\nO\257\233MCd\32\205\t1\334\233\343\343Lj.\256\353\1"
 #"\266\177\326\304\224Y\215=s1\231\36/\226\265z<\272\4\220"
 #")T7z\270\250\342 \245\17\227\262}\265\221s\315V\266\2367"
) 500
(
 #"\2606\326\211/\312\300\210m\24\2231"
 #"\232\345\371\251\234>u\231V\335\34,"
 #"O\244p\350\214\203\252\303NR\264\327"
 #"9\266\243\360\257\247\334\0\216\215O\20"
 #"\21\364\363\316\327\335\30g\350\270\32\21"
 #"\215;\b\267\317\234\244a\330\304\244N"
 #"\305\375\361^.\215{q\371\324,\212S\341\361*<^<\asr\374\315\265"
 #"in\355c\304=E\311\262\205\24\27"
 #"dr\245\327\315\342\245\251\230c\242\350"
 #"\37\271\316o\365W\311I\322`\v\350\261\215\353X\235\227LY\311\2L\372)"
 #"\276\251\357\272\31X]\323\317\246\375v"
 #"\334!\37]\326\v8<\n\330\35\\\262\331y}C\nO\256\216\301\352\17Q"
 #"\230\34\"\240\32510<\206\345x="
 #"\5U\255X\235\252\177\3K\237\373\226\237?(\3466\225\215O;\23\371\2623"
 #"\201]\25i\270\3\n\rI\371\324\326"
 #"\17\242\16:\261\270\f\4|\223l\311"
 #"\323\261\363\227\0\307\264\253\330\\\234F"
 #"\331\302 w?s\354\37`\274\214\261rW\20un\21\221\235\347P\334.V"
 #",2q\240\246\215\35IN\206gE"
 #"\22\231\265\204u\223\16v\36\262\261\276"
 #"\300D\341|\r\211\356\16Z4j\266\215eP^b\6@\335\330;\257:y"
 #"y\21\212s\214\354\230\0\17-\237Mo\20\374\203v\nr\347R\272\302LO"
 #"s\17\256q//<\272\230\323g\257"
 #"\221\235\244\341\324\300\4\267\32U,H"
 #"\230\301\305\323}\234\34\16\321t\326\1"
 #"\203\303n\21\219\\\337+\326>\247\234h\261\313\220'$\"\"{\16\326I"
 #"\342\252\335\262\276v@^\375C\244\262"
 #"\356\2524\266]\23\21\221\3u}\"\212\"{\216v\313\360\250OB\201I\t"
 #"L\6\5\231V\212\224\276\334(\"\"\317\276\335(\233\337;'?\265\f"
 #"\311\213\a\254\"\241\340\264\251\277{8"
 #"\235\36\334R\303\331\36\27\306\271sy"
) 67
(
 #"\240$\2077\327\233A5\375\352\205\5"
 #"\266u\215\262\327\322\201\323\343\347\245\362"
 #"<\262\346\e\377\313\36~\261so\211G\2537P\230\227\36\26\6"
 #"\360'b\224\2?\35\347\313A\0\0\0\0IEND\256B`\202"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Template for tick"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-direction"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 5 #"])]))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; tick : worldState -> worldState"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; moves the fallers down the screen by one coordinate, moves paddle"
 #","
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; possibly adds & removes a faller to the list, and gets the score "
 #"for each tick"
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #";; (define (tick w) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; - Given (tick (make-world 100 \"right\" '() 0)), returns (make-wo"
 #"rld 101 \"right\" '() 0)"
) 0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; - Given (tick (make-world 50 \"right\" (list (make-posn 10 10) (m"
 #"ake-posn 50 10)) 40)),"
) 0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #";; returns (make-world 51 \"right\" (list (make-posn 10 11) (make-po"
 #"sn 50 11) (maybe add a new faller) ) 40)"
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-faller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"get-score"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-faller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"get-score"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-direction"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"world-direction"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"update-faller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"get-score"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 15 #"world-direction"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"update-faller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"get-score"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 8 #")))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; because of the randomness, this function is not really testable w"
 #"ith check-expect"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; update-faller : [Number, list-of-posn] -> list-of-posn"
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";; checks if list-of-faller-positions overlaps paddle or hits the bo"
 #"ttom, and then removes the faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; if the number of fallers are less than 20, then maybe adds a fall"
 #"er"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";; moves the list of fallers down the screen by one coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; (define (update-faller paddle faller) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";; - Given (20 (list (make-posn 10 10))), returns (21 (list (make-po"
 #"sn 10 11)), and maybe adds a new faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 144
(
 #";; - Given (50 (list (make-posn 10 10) (make-posn 50 10))), returns "
 #"(51 (list (make-posn 10 11) (make-posn 50 11))), and maybe adds a ne"
 #"w faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Strategy : Function composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 6 #"faller"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 16 #"maybe-add-faller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 6 #"faller"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; because of the randomness, this function is not really testable w"
 #"ith check-expect"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; move-faller : list-of-posn -> list-of-posn"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; moves the list of fallers down the screen by one coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (define (move-faller fallers) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; - Given (list (make-posn 10 10)), returns (list (make-posn 10 11)"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #";; - Given (list (make-posn 10 10) (make-posn 30 50)), returns (list"
 #" (make-posn 10 11) (make-posn (30 51))"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Strategy : Decision tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-faller"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"51"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; maybe-add-faller : list-of-posn -> list-of-posn"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; if the length of the list of fallers is less than 20, then maybe "
 #"adds a new faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";; (define (maybe-add-faller fallers) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; - Given (list (make-posn 10 10)), and maybe adds a new faller"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; - Given (list (make-posn 10 10) (make-posn 30 50)), and maybe add"
 #"s a new faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Strategy : Decision tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"maybe-add-faller"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #"])]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; because of the randomness, this function is not really testable w"
 #"ith check-expect"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; check-faller : (Number list-of-posn) -> list-of-posn"
0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";; checks if the list of faller hits the bottom, or overlapps paddle"
 #", then removes the faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 43 #"(define (check-faller paddle fallers) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; - Given (50 (list (make-posn 10 10))), returns (50 (list (make-po"
 #"sn 10 10)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";; - Given (70 (list (make-posn 40 290) (make-posn 60 240))), return"
 #"s (70 (make-posn 60 240))"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";; - Given (100 (list (make-posn 80 279))), returns (100 '())"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Strategy : Decision tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"faller-height"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #") ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 8 #")))])]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"290"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 3 #"240"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 3 #"279"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; get-score : (Number list-of-posn Number) -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; if a faller in the list overlaps paddle, then increases score by "
 #"10 points"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";; (define (get-score paddle fallers score) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; - Given (50 (list (make-posn 10 10)) 10), returns 10"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; - Given (100 (list (make-posn 80 279)) 35), returns 45"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Strategy : Decision tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-score"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 5 #"score"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-score"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 5 #"score"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-score"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 3 #"279"
0 0 24 3 3 #")) "
0 0 21 3 2 #"35"
0 0 24 3 2 #") "
0 0 21 3 2 #"45"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; collide : list-of-posn -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; checks if a fallers in the list overlaps paddle, return #true. if"
 #" not, return #false."
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";; (define (collide paddle fallers) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; - Given (100 (list (make-posn 80 279))), returns #true"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; - Given (140 (list (make-posn 174 280) (make-posn 40 60))), retur"
 #"ns #true"
) 0 0 24 29 1 #"\n"
0 0 17 3 57 #";; - Given (120 (list (make-posn 25 70))), returns #false"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Strategy : Interval decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 1 #" "
0 0 14 3 13 #"paddle-height"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"faller-height"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"faller-height"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 3 #"279"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 21 3 3 #"140"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"174"
0 0 24 3 1 #" "
0 0 21 3 3 #"280"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 4 #"))) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; minus-score : Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; decreases scores by 1 point if the number is greater than 0."
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; (define (minus-score Number) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; - given 0, return 0"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; - Given 10, return 9"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Strategy : Decision tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minus-score"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 6 #"number"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; (check-expect (minus-score 0) 0)"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; (check-expect (minus-score 9) 9)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; key : (worldState keyEvt) -> worldState"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";; if the key event is \"down\", then switched the direction, and de"
 #"creases score by 1 point."
) 0 0 24 29 1 #"\n"
0 0 17 3 30 #";; (define (key w a-key) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";; - Given ((make-world 100 \"right\" '() 0) \"down\"), returns (mak"
 #"e-world 100 \"left\" '() 0)"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; - Given ((make-world 75 \"left\" '() 10) \"up\"), returns (make-w"
 #"orld 75 \"left\" '() 10) "
) 0 0 24 29 1 #"\n"
0 0 17 3 167
(
 #";; - Given ((make-world 50 \"left\" (list (make-posn 10 10) (make-po"
 #"sn 50 10)) 40) \"down\"), returns (make-world 50 \"right\" (list (ma"
 #"ke-posn 10 10) (make-posn 50 10)) 39)"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Strategy : Decision tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-direction"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"minus-score"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-direction"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"minus-score"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"up\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 2 #"39"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 21 3 5 #"1/200"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 4 #"draw"
0 0 24 3 2 #"])"
0           0
