#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 76 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 3331 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 93
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e |falling - extension|) (rea"
) 0 0 4 3 265
(
 #"d-case-sensitive #t) (teachpacks"
 #" ((lib \"image.rkt\" \"teachpack\" \"2htdp\") (lib \"universe.rkt\" "
 #"\"teachpack\" \"2htdp\"))) (htdp-settings #(#t constructor repeating"
 #"-decimal #f #t none #f ((lib \"image.rkt\" \"teachpack\" \"2htdp\") "
 #"(lib \"universe.rkt\" \"teachpack\" \"2htdp\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 27 #";; a list-of-posn is either"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   - '()"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;   - (cons posn list-of-posn)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; a direction is either"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;   - \"left\""
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;   - \"right\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; a World is"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;   (make-world paddle        -- x coordinate of the paddle"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;               direction     -- which way the paddle is moving"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;               number        -- by how much the paddle should shir"
 #"ink or widen"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";;               fallers       -- fallerset"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;               number         -- score"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; a fallerset"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;   (make-fallerset list-of-posn -- normal faller positions"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;                   list-of-posn -- shirinking faller positions"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;                   list-of-posn -- widening faller positions"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";;                   number       -- counter to check if special fal"
 #"lers need to be added"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"fallerset"
0 0 24 3 2 #" ("
0 0 14 3 7 #"nfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; A Template for World"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"template-for-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"paddle-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 15 #"direction-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"diff-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 22 #"template-for-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 13 #"fallers-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"score-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; A Template for fallerset"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"template-for-fallerset"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"fallerset-nfaller"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"fallerset-sfaller"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"fallerset-wfaller"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 13 #"fallerset-num"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 17 3 16 #"; width of scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #") "
0 0 17 3 17 #"; height of scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")  "
0 0 17 3 17 #"; width of faller"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"faller-height"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 17 3 18 #"; height of faller"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 17 3 17 #"; width of paddle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"paddle-height"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 17 3 18 #"; height of paddle"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-image"
0 0 24 3 1 #" "
0 2          17 63 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\362IDAT8\215\245\224mL\324\5\34"
 #"\307?\307\35w\340\35\310\311\241\240\300"
 #"!`\2\352\260\210j\250\320\224\204t"
 #"=\250=\b\e\325\254\27\275hZ\353\311\232\1\326r+[k\332\323z\260|"
 #"\230ck\211ez\31\5\370\320\203\210\2\212' \217\36\307I\4\336qO\34"
 #"w\374\177\275h\326\232\243{\321\367\365"
 #"\367\373\331o\373}\367U\211\210\20F\217m\253\5\355L\366U\256\fg%\""
 #"\234a\307''H\233\237F\220 U\3577\206\5j\302\31\\\30i\ri\211"
 #"\212Ig\315J\323\377\273p\336}_\260qm\n\367\2304d\306\371\271\322\337"
 #"Aj\305\21@\2316\243:\331\324)\5K3\370\352x+.%\226\254D8"
 #"\331\356\345\265MK\371\376W;\37]p\23\211\202c\310\300S\e\364\224/0"
 #"\240\213\326Q\271\273\201\322\242,\332{"
 #"\a\231\245\217\245$/\236\346n\17\352P\372\306\352}\3j\372\207\374hQ3"
 #"k\246\236\332\313\23\304\6Fx\367\210\r\313+\371X\32\6\311H\360\261uM"
 #"\6wm\332O~v2\365#\6T\276\0:\243\221\243]Nj\352\332\321\307"
 #"\231P\267\375\370y\265e\357wX}\311\370\r\32\34\327\306q\5\r\274Q\221"
 #"\305\326\17\255D\371G\350\322hh\0375\341\355h!\365\316;([\226\310\17"
 #"\27=\3649~\307g\324\321\245\304\263"
 #"*N\341\371G\226\20\201\b\t\3464"
 #"\316\277\225C\272\253\233\23=q\214\272"
 #"&\370\270\356\nO\257\233MCd\32\205\t1\334\233\343\343Lj.\256\353\1"
 #"\266\177\326\304\224Y\215=s1\231\36/\226\265z<\272\4\220"
 #")T7z\270\250\342 \245\17\227\262}\265\221s\315V\266\2367"
) 500
(
 #"\2606\326\211/\312\300\210m\24\2231"
 #"\232\345\371\251\234>u\231V\335\34,"
 #"O\244p\350\214\203\252\303NR\264\327"
 #"9\266\243\360\257\247\334\0\216\215O\20"
 #"\21\364\363\316\327\335\30g\350\270\32\21"
 #"\215;\b\267\317\234\244a\330\304\244N"
 #"\305\375\361^.\215{q\371\324,\212S\341\361*<^<\asr\374\315\265"
 #"in\355c\304=E\311\262\205\24\27"
 #"dr\245\327\315\342\245\251\230c\242\350"
 #"\37\271\316o\365W\311I\322`\v\350\261\215\353X\235\227LY\311\2L\372)"
 #"\276\251\357\272\31X]\323\317\246\375v"
 #"\334!\37]\326\v8<\n\330\35\\\262\331y}C\nO\256\216\301\352\17Q"
 #"\230\34\"\240\32510<\206\345x="
 #"\5U\255X\235\252\177\3K\237\373\226\237?(\3466\225\215O;\23\371\2623"
 #"\201]\25i\270\3\n\rI\371\324\326"
 #"\17\242\16:\261\270\f\4|\223l\311"
 #"\323\261\363\227\0\307\264\253\330\\\234F"
 #"\331\302 w?s\354\37`\274\214\261rW\20un\21\221\235\347P\334.V"
 #",2q\240\246\215\35IN\206gE"
 #"\22\231\265\204u\223\16v\36\262\261\276"
 #"\300D\341|\r\211\356\16Z4j\266\215eP^b\6@\335\330;\257:y"
 #"y\21\212s\214\354\230\0\17-\237Mo\20\374\203v\nr\347R\272\302LO"
 #"s\17\256q//<\272\230\323g\257"
 #"\221\235\244\341\324\300\4\267\32U,H"
 #"\230\301\305\323}\234\34\16\321t\326\1"
 #"\203\303n\21\219\\\337+\326>\247\234h\261\313\220'$\"\"{\16\326I"
 #"\342\252\335\262\276v@^\375C\244\262"
 #"\356\2524\266]\23\21\221\3u}\"\212\"{\216v\313\360\250OB\201I\t"
 #"L\6\5\231V\212\224\276\334(\"\"\317\276\335(\233\337;'?\265\f"
 #"\311\213\a\254\"\241\340\264\251\277{8"
 #"\235\36\334R\303\331\36\27\306\271sy"
) 67
(
 #"\240$\2077\327\233A5\375\352\205\5"
 #"\266u\215\262\327\322\201\323\343\347\245\362"
 #"<\262\346\e\377\313\36~\261so\211G\2537P\230\227\36\26\6"
 #"\360'b\224\2?\35\347\313A\0\0\0\0IEND\256B`\202"
) 0 0 24 3 2 #") "
0 0 17 3 17 #"; image of faller"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"special-faller-image"
0 0 24 3 1 #" "
0 2          17 63 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\373IDAT8\215\245\224[L\323\a\24"
 #"\306\177\355\37A\31\227\321:@\245\204"
 #"\31326\23L\321@\210\310\360\306\315"
 #"\4\205\211\356\241\232-\314K2\361A33\223\2750c\234\3134\213\227-\250"
 #"\211\311\334B\4\225\250a\223i\220a"
 #"h\224YJ\250\211n\200\\\204\325\256"
 #"\212\364F\241\364r\366\260\310\262,\330"
 #"\207}\317\337\371\345\344\234/\237JD\2040:xp7\221\221\221\34:t*"
 #"\234\25u8C}\375\27\244\247g\20\n\2058y\362\363\260\300\210p\206`0"
 #"\210\3135\301\374\371\363Y\273v\303\377"
 #"\333\260\264t%\e6T\223\236\236\211V\253ep\360w6o.\346UWR"
 #"uu\335\226\234\234\2Z[/\21\b\370Y\2748\25\213\245\233\235;\17`4"
 #"\376\214\321\370\v*\225\n\273\335Ne"
 #"\345\26\226/_\305\202\5\257q\342D\35EE%\f\f<\"66\216\274\274"
 #"\325\364\365=@\321\351\22\352,\226_"
 #"\261Z\307P\253\325\304\307'\320\323c"
 #"\"\24\362\321\334\334\304\341\303\337\320\321"
 #"\321Jbb\"\325\325\37\261}\373&\226.}\207'O\6\231\231\231&.\356"
 #"u,\02637n\\#>>\16\245\275\375n]c\343w8\235.\346\315\213"
 #"\300f\263\342\367\373\251\251\331\307\351\323"
 #"_\343\367;\231\232\232\302n\26734"
 #"\364\ez\275\2365k*\350\351\271\213\325:FTT\24^\357$:]*\6"
 #"\303\307\250E\4\235N\307\251S\337\23"
 #"\f\6\351\357\37\300\341p\320\322\322@U\325F\334n\27ii\31dg/#"
 #"**\n\247\323\301\2313_\242\321h\321h\264(\212\302\216\35\373Q"
 #"\24\5\21A\3652\207[\267\226RY\271\211\252\252\0170\233;\271u"
) 500
(
 #"\353't\272T\24E\301j\375\203\204\204\4rs\v0\32\333\361\371|\354\337"
 #"\177\210\316\316V\32\e\e\210\216^\300"
 #"\361\343\347\377~\312K\240\3239N0"
 #"\30\344\342\305s\304\304\304\342\363\371\360"
 #"\371\246IN^\314\310\310\20\212\242\220"
 #"\236\236\211\335\376'^\357$\211\211Ix\275^JK\253HI\311\370olz"
 #"{\273p:_\260j\325:V\256\\\313\360\360\20\331\3319h4\v\261\331l"
 #"\30\215\367HII\303\343q\343p8"
 #"\310\313{\227\262\262\367\210\211\211\243\255"
 #"\355\352,p6\330\27.\234G\243I`\313\26\3##\217q:]\214\217?"
 #"cb\342\5\6C\r\335\335w\31\37\177Ff\346[\364\366\232y\372t\224\276"
 #"\276\207\30\215F\326\257_\377\357\rk"
 #"k\267q\366l\23\261\261\261\230\315]"
 #"\364\364\230\330\265\253\226\351\351)T*"
 #"\25\267o\337 \20\b0::\314\324\224\227\325\253\213\271y\363G&'=T"
 #"Tl$''\237\335\273\337\377\a\250(\nG\216\34 3\363M\306\306F\361"
 #"z\275,[\226\317\345\313\315\344\346\26"
 #"\20\21\21Ajj\32\32\215\226\246\246"
 #"K\24\26\226\223\225\3656~\277\37\217"
 #"\307\215\305b\242\254\254\34\0\245\277\337"
 #"T\267b\305r<\36\17Z\355B\212"
 #"\212Jp\273'\260\333\307\320\353\365\24"
 #"\26\226\363\340\201\t\227\313\211\301\260\a"
 #"\223\351\16))K\350\357\177\310\242E"
 #"KHN^\302\375\373\367\30\36\36\302l6\202\3156*\"\"mmWep"
 #"\360\221tw\337\21\207\343\271\210\21044|+EE+\244\276\376\250\230L\35"
 #"r\345\312y1\233;ED\244\265\265IB\241\220\\\277\376\203<\177n\223\231"
 #"\31\237\370|\323\202\314\241P($\373\366}(\"\"G\217~*\307\216"
 #"}&&S\207\234;\367\225\4\2\376\271\306d6\207s\251\266v\e}"
) 76
(
 #"}\217IJz\203\222\222b\f\206=\250\325s\227T\330>\334\273\367\23ZZ"
 #".\343v\273)(X\367J\330\354\227"
 #"_\245\254,=\321\321\321\344\346\346\223\221\2614\234\235\277\0"
 #"9m\n~\331C\17l\0\0\0\0IEND\256B`\202"
) 0 0 24 3 2 #") "
0 0 17 3 25 #"; image of special faller"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 23 #"shirinking-faller-image"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 17 3 29 #"; image of shirinking faller "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"widening-faller-image"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")) "
0 0 17 3 27 #"; image of widening faller "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-image"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 14 3 13 #"paddle-height"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")) "
0 0 17 3 17 #"; image of paddle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"EMPTY"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 3 #")) "
0 0 17 3 13 #"; empty scene"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; tick : worldState -> worldState"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; moves the fallers down the screen by one coordinate, moves paddle"
 #","
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; possibly adds & removes a faller to the list, and gets the score "
 #"for each tick"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";; when shirinking faller hits the paddle, the paddle get shirinked"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; when widening faller hits the paddle, the paddle get widened"
0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";; when the x-coordinate of normal faller is within the area of the "
 #"paddle, the shape changes"
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #";; (define (tick w) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 19 #"hitting-right-side?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"update-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 18 #"hitting-left-side?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"update-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-direction"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"update-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"update-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; because of the randomness, this function is not really testable w"
 #"ith check-expect"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; hitting-right-side? : worldState -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; check if the paddle is reached at the right side of the screen"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; (define (hitting-right-side? w)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hitting-right-side?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 12 #"paddle-width"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hitting-right-side?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 19 3 7 #"\"right\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hitting-right-side?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 3 #"100"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 19 3 7 #"\"right\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; hitting-left-side? : worldState -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; check if the paddle is reached at the left side of the screen"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; (define (hitting-left-side? w)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"hitting-left-side?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 12 #"paddle-width"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"hitting-left-side?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"hitting-left-side?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 3 #"150"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Data Definition"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Operator is either + or -"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; update-world : worldState, direction, operator"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; moves the fallers down the screen by one coordinate, moves paddle"
 #","
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; possibly adds & removes a faller to the list, and gets the score "
 #"for each tick"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";; when shirinking faller hits the paddle, the paddle get shirinked"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; when widening faller hits the paddle, the paddle get widened"
0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";; when the x-coordinate of normal faller is within the area of the "
 #"paddle, the shape changes"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"update-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 8 #"operator"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 8 #"operator"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 9 #"direction"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"com-diff"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 17 #"fallerset-sfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 17 #"fallerset-wfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"update-faller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 17 #"fallerset-nfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 15 #"update-swfaller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 17 #"fallerset-sfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 15 #"update-swfaller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 17 #"fallerset-wfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 13 #"fallerset-num"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"get-score"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 17 #"fallerset-nfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 17 #"fallerset-sfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 17 #"fallerset-wfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; because of the randomness, this function is not really testable w"
 #"ith check-expect"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; draw : worldState -> Scene"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; renders the list of all the fallers, paddle, and score of the wor"
 #"ld"
) 0 0 24 29 1 #"\n"
0 0 17 3 24 #";; (define (draw w) ...)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"place-images"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"render-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-sfaller-images"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 17 #"fallerset-sfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 18 #"get-wfaller-images"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 17 #"fallerset-wfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 2 #" ("
0 0 14 3 22 #"maybe-touching-paddle?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"paddle-height"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 17 #"fallerset-sfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 17 #"fallerset-wfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 17 #"fallerset-nfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"EMPTY"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; render-paddle : worldState -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; renders paddle image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"render-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 12 #"paddle-width"
0 0 24 3 2 #") "
0 0 14 3 13 #"paddle-height"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"render-paddle"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 6           4 63 226
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0"
 #" 0 50 12 0 0) #(struct:pulled-point 0 0 0 12 0 0)) 255 \"green\")) #"
 #"(struct:bb 50 12 12) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; render-score : worldState -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; renders score image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Score : \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-score"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 6           4 63 1382
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"4.5 8.0 #(struct:text \"S\" 0 1 \"blue\" 14 #f swiss normal normal #"
 #"f))) #(struct:translate 9.0 0.0 #(struct:translate 3.5 8.0 #(struct:"
 #"text \"c\" 0 1 \"blue\" 14 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 16.0 0.0 #(struct:translate 4.0 8.0 #(struct:text \"o\" 0 1"
 #" \"blue\" 14 #f swiss normal normal #f))))) #(struct:translate 24.0 "
 #"0.0 #(struct:translate 2.5 8.0 #(struct:text \"r\" 0 1 \"blue\" 14 #"
 #"f swiss normal normal #f))))) #(struct:translate 29.0 0.0 #(struct:t"
 #"ranslate 4.0 8.0 #(struct:text \"e\" 0 1 \"blue\" 14 #f swiss normal"
 #" normal #f))))) #(struct:translate 37.0 0.0 #(struct:translate 2.0 8"
 #".0 #(struct:text \" \" 0 1 \"blue\" 14 #f swiss normal normal #f))))"
 #") #(struct:translate 41.0 0.0 #(struct:translate 2.0 8.0 #(struct:te"
 #"xt \":\" 0 1 \"blue\" 14 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 45.0 0.0 #(struct:translat"
 #"e 2.0 8.0 #(struct:text \" \" 0 1 \"blue\" 14 #f swiss normal normal"
 #" #f))))) #(struct:translate 49.0 0.0 #(struct:translate 4.0 8.0 #(st"
 #"ruct:text \"0\" 0 1 \"blue\" 14 #f swiss normal normal #f)))) #(stru"
 #"ct:bb 57.0 16.0 13.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Data Definition"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; list-of-check is either list of (#true or #false)"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; maybe-touching-paddle? : worldState -> list-of-check"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; returns #true if the x-coordinate of fallers is within the area o"
 #"f paddle"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; or #false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"maybe-touching-paddle?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 17 #"fallerset-nfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"maybe-touching-paddle?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 3 #"150"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 2 #"20"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"maybe-touching-paddle?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 3 #"150"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 2 #"20"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                    "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; get-sfaller-images : list of posn -> list of images"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Creates list of current shirinking faller images"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; (define (get-sfaller-images l) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-sfaller-images"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 23 #"shirinking-faller-image"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-sfaller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-sfaller-images"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-sfaller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 23 #"shirinking-faller-image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-sfaller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 23 #"shirinking-faller-image"
0 0 24 3 1 #" "
0 0 14 3 23 #"shirinking-faller-image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; get-wfaller-images : list of posn -> list of images"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Creates list of current widening faller images"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; (define (get-wfaller-images l) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-wfaller-images"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 21 #"widening-faller-image"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-wfaller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-wfaller-images"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-wfaller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 21 #"widening-faller-image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-wfaller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 21 #"widening-faller-image"
0 0 24 3 1 #" "
0 0 14 3 21 #"widening-faller-image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; get-faller-images : list of (#true or false) -> list of images"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Creates list of current normal faller images"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (define (get-faller-images l) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 20 #"special-faller-image"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-image"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 8 #")))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 2          17 63 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\362IDAT8\215\245\224mL\324\5\34"
 #"\307?\307\35w\340\35\310\311\241\240\300"
 #"!`\2\352\260\210j\250\320\224\204t"
 #"=\250=\b\e\325\254\27\275hZ\353\311\232\1\326r+[k\332\323z\260|"
 #"\230ck\211ez\31\5\370\320\203\210\2\212' \217\36\307I\4\336qO\34"
 #"w\374\177\275h\326\232\243{\321\367\365"
 #"\367\373\331o\373}\367U\211\210\20F\217m\253\5\355L\366U\256\fg%\""
 #"\234a\307''H\233\237F\220 U\3577\206\5j\302\31\\\30i\ri\211"
 #"\212Ig\315J\323\377\273p\336}_\260qm\n\367\2304d\306\371\271\322\337"
 #"Aj\305\21@\2316\243:\331\324)\5K3\370\352x+.%\226\254D8"
 #"\331\356\345\265MK\371\376W;\37]p\23\211\202c\310\300S\e\364\224/0"
 #"\240\213\326Q\271\273\201\322\242,\332{"
 #"\a\231\245\217\245$/\236\346n\17\352P\372\306\352}\3j\372\207\374hQ3"
 #"k\246\236\332\313\23\304\6Fx\367\210\r\313+\371X\32\6\311H\360\261uM"
 #"\6wm\332O~v2\365#\6T\276\0:\243\221\243]Nj\352\332\321\307"
 #"\231P\267\375\370y\265e\357wX}\311\370\r\32\34\327\306q\5\r\274Q\221"
 #"\305\326\17\255D\371G\350\322hh\0375\341\355h!\365\316;([\226\310\17"
 #"\27=\3649~\307g\324\321\245\304\263"
 #"*N\341\371G\226\20\201\b\t\3464"
 #"\316\277\225C\272\253\233\23=q\214\272"
 #"&\370\270\356\nO\257\233MCd\32\205\t1\334\233\343\343Lj.\256\353\1"
 #"\266\177\326\304\224Y\215=s1\231\36/\226\265z<\272\4\220"
 #")T7z\270\250\342 \245\17\227\262}\265\221s\315V\266\2367"
) 500
(
 #"\2606\326\211/\312\300\210m\24\2231"
 #"\232\345\371\251\234>u\231V\335\34,"
 #"O\244p\350\214\203\252\303NR\264\327"
 #"9\266\243\360\257\247\334\0\216\215O\20"
 #"\21\364\363\316\327\335\30g\350\270\32\21"
 #"\215;\b\267\317\234\244a\330\304\244N"
 #"\305\375\361^.\215{q\371\324,\212S\341\361*<^<\asr\374\315\265"
 #"in\355c\304=E\311\262\205\24\27"
 #"dr\245\327\315\342\245\251\230c\242\350"
 #"\37\271\316o\365W\311I\322`\v\350\261\215\353X\235\227LY\311\2L\372)"
 #"\276\251\357\272\31X]\323\317\246\375v"
 #"\334!\37]\326\v8<\n\330\35\\\262\331y}C\nO\256\216\301\352\17Q"
 #"\230\34\"\240\32510<\206\345x="
 #"\5U\255X\235\252\177\3K\237\373\226\237?(\3466\225\215O;\23\371\2623"
 #"\201]\25i\270\3\n\rI\371\324\326"
 #"\17\242\16:\261\270\f\4|\223l\311"
 #"\323\261\363\227\0\307\264\253\330\\\234F"
 #"\331\302 w?s\354\37`\274\214\261rW\20un\21\221\235\347P\334.V"
 #",2q\240\246\215\35IN\206gE"
 #"\22\231\265\204u\223\16v\36\262\261\276"
 #"\300D\341|\r\211\356\16Z4j\266\215eP^b\6@\335\330;\257:y"
 #"y\21\212s\214\354\230\0\17-\237Mo\20\374\203v\nr\347R\272\302LO"
 #"s\17\256q//<\272\230\323g\257"
 #"\221\235\244\341\324\300\4\267\32U,H"
 #"\230\301\305\323}\234\34\16\321t\326\1"
 #"\203\303n\21\219\\\337+\326>\247\234h\261\313\220'$\"\"{\16\326I"
 #"\342\252\335\262\276v@^\375C\244\262"
 #"\356\2524\266]\23\21\221\3u}\"\212\"{\216v\313\360\250OB\201I\t"
 #"L\6\5\231V\212\224\276\334(\"\"\317\276\335(\233\337;'?\265\f"
 #"\311\213\a\254\"\241\340\264\251\277{8"
 #"\235\36\334R\303\331\36\27\306\271sy"
) 67
(
 #"\240$\2077\327\233A5\375\352\205\5"
 #"\266u\215\262\327\322\201\323\343\347\245\362"
 #"<\262\346\e\377\313\36~\261so\211G\2537P\230\227\36\26\6"
 #"\360'b\224\2?\35\347\313A\0\0\0\0IEND\256B`\202"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 2          17 63 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\362IDAT8\215\245\224mL\324\5\34"
 #"\307?\307\35w\340\35\310\311\241\240\300"
 #"!`\2\352\260\210j\250\320\224\204t"
 #"=\250=\b\e\325\254\27\275hZ\353\311\232\1\326r+[k\332\323z\260|"
 #"\230ck\211ez\31\5\370\320\203\210\2\212' \217\36\307I\4\336qO\34"
 #"w\374\177\275h\326\232\243{\321\367\365"
 #"\367\373\331o\373}\367U\211\210\20F\217m\253\5\355L\366U\256\fg%\""
 #"\234a\307''H\233\237F\220 U\3577\206\5j\302\31\\\30i\ri\211"
 #"\212Ig\315J\323\377\273p\336}_\260qm\n\367\2304d\306\371\271\322\337"
 #"Aj\305\21@\2316\243:\331\324)\5K3\370\352x+.%\226\254D8"
 #"\331\356\345\265MK\371\376W;\37]p\23\211\202c\310\300S\e\364\224/0"
 #"\240\213\326Q\271\273\201\322\242,\332{"
 #"\a\231\245\217\245$/\236\346n\17\352P\372\306\352}\3j\372\207\374hQ3"
 #"k\246\236\332\313\23\304\6Fx\367\210\r\313+\371X\32\6\311H\360\261uM"
 #"\6wm\332O~v2\365#\6T\276\0:\243\221\243]Nj\352\332\321\307"
 #"\231P\267\375\370y\265e\357wX}\311\370\r\32\34\327\306q\5\r\274Q\221"
 #"\305\326\17\255D\371G\350\322hh\0375\341\355h!\365\316;([\226\310\17"
 #"\27=\3649~\307g\324\321\245\304\263"
 #"*N\341\371G\226\20\201\b\t\3464"
 #"\316\277\225C\272\253\233\23=q\214\272"
 #"&\370\270\356\nO\257\233MCd\32\205\t1\334\233\343\343Lj.\256\353\1"
 #"\266\177\326\304\224Y\215=s1\231\36/\226\265z<\272\4\220"
 #")T7z\270\250\342 \245\17\227\262}\265\221s\315V\266\2367"
) 500
(
 #"\2606\326\211/\312\300\210m\24\2231"
 #"\232\345\371\251\234>u\231V\335\34,"
 #"O\244p\350\214\203\252\303NR\264\327"
 #"9\266\243\360\257\247\334\0\216\215O\20"
 #"\21\364\363\316\327\335\30g\350\270\32\21"
 #"\215;\b\267\317\234\244a\330\304\244N"
 #"\305\375\361^.\215{q\371\324,\212S\341\361*<^<\asr\374\315\265"
 #"in\355c\304=E\311\262\205\24\27"
 #"dr\245\327\315\342\245\251\230c\242\350"
 #"\37\271\316o\365W\311I\322`\v\350\261\215\353X\235\227LY\311\2L\372)"
 #"\276\251\357\272\31X]\323\317\246\375v"
 #"\334!\37]\326\v8<\n\330\35\\\262\331y}C\nO\256\216\301\352\17Q"
 #"\230\34\"\240\32510<\206\345x="
 #"\5U\255X\235\252\177\3K\237\373\226\237?(\3466\225\215O;\23\371\2623"
 #"\201]\25i\270\3\n\rI\371\324\326"
 #"\17\242\16:\261\270\f\4|\223l\311"
 #"\323\261\363\227\0\307\264\253\330\\\234F"
 #"\331\302 w?s\354\37`\274\214\261rW\20un\21\221\235\347P\334.V"
 #",2q\240\246\215\35IN\206gE"
 #"\22\231\265\204u\223\16v\36\262\261\276"
 #"\300D\341|\r\211\356\16Z4j\266\215eP^b\6@\335\330;\257:y"
 #"y\21\212s\214\354\230\0\17-\237Mo\20\374\203v\nr\347R\272\302LO"
 #"s\17\256q//<\272\230\323g\257"
 #"\221\235\244\341\324\300\4\267\32U,H"
 #"\230\301\305\323}\234\34\16\321t\326\1"
 #"\203\303n\21\219\\\337+\326>\247\234h\261\313\220'$\"\"{\16\326I"
 #"\342\252\335\262\276v@^\375C\244\262"
 #"\356\2524\266]\23\21\221\3u}\"\212\"{\216v\313\360\250OB\201I\t"
 #"L\6\5\231V\212\224\276\334(\"\"\317\276\335(\233\337;'?\265\f"
 #"\311\213\a\254\"\241\340\264\251\277{8"
 #"\235\36\334R\303\331\36\27\306\271sy"
) 67
(
 #"\240$\2077\327\233A5\375\352\205\5"
 #"\266u\215\262\327\322\201\323\343\347\245\362"
 #"<\262\346\e\377\313\36~\261so\211G\2537P\230\227\36\26\6"
 #"\360'b\224\2?\35\347\313A\0\0\0\0IEND\256B`\202"
) 0 2          17 63 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\362IDAT8\215\245\224mL\324\5\34"
 #"\307?\307\35w\340\35\310\311\241\240\300"
 #"!`\2\352\260\210j\250\320\224\204t"
 #"=\250=\b\e\325\254\27\275hZ\353\311\232\1\326r+[k\332\323z\260|"
 #"\230ck\211ez\31\5\370\320\203\210\2\212' \217\36\307I\4\336qO\34"
 #"w\374\177\275h\326\232\243{\321\367\365"
 #"\367\373\331o\373}\367U\211\210\20F\217m\253\5\355L\366U\256\fg%\""
 #"\234a\307''H\233\237F\220 U\3577\206\5j\302\31\\\30i\ri\211"
 #"\212Ig\315J\323\377\273p\336}_\260qm\n\367\2304d\306\371\271\322\337"
 #"Aj\305\21@\2316\243:\331\324)\5K3\370\352x+.%\226\254D8"
 #"\331\356\345\265MK\371\376W;\37]p\23\211\202c\310\300S\e\364\224/0"
 #"\240\213\326Q\271\273\201\322\242,\332{"
 #"\a\231\245\217\245$/\236\346n\17\352P\372\306\352}\3j\372\207\374hQ3"
 #"k\246\236\332\313\23\304\6Fx\367\210\r\313+\371X\32\6\311H\360\261uM"
 #"\6wm\332O~v2\365#\6T\276\0:\243\221\243]Nj\352\332\321\307"
 #"\231P\267\375\370y\265e\357wX}\311\370\r\32\34\327\306q\5\r\274Q\221"
 #"\305\326\17\255D\371G\350\322hh\0375\341\355h!\365\316;([\226\310\17"
 #"\27=\3649~\307g\324\321\245\304\263"
 #"*N\341\371G\226\20\201\b\t\3464"
 #"\316\277\225C\272\253\233\23=q\214\272"
 #"&\370\270\356\nO\257\233MCd\32\205\t1\334\233\343\343Lj.\256\353\1"
 #"\266\177\326\304\224Y\215=s1\231\36/\226\265z<\272\4\220"
 #")T7z\270\250\342 \245\17\227\262}\265\221s\315V\266\2367"
) 500
(
 #"\2606\326\211/\312\300\210m\24\2231"
 #"\232\345\371\251\234>u\231V\335\34,"
 #"O\244p\350\214\203\252\303NR\264\327"
 #"9\266\243\360\257\247\334\0\216\215O\20"
 #"\21\364\363\316\327\335\30g\350\270\32\21"
 #"\215;\b\267\317\234\244a\330\304\244N"
 #"\305\375\361^.\215{q\371\324,\212S\341\361*<^<\asr\374\315\265"
 #"in\355c\304=E\311\262\205\24\27"
 #"dr\245\327\315\342\245\251\230c\242\350"
 #"\37\271\316o\365W\311I\322`\v\350\261\215\353X\235\227LY\311\2L\372)"
 #"\276\251\357\272\31X]\323\317\246\375v"
 #"\334!\37]\326\v8<\n\330\35\\\262\331y}C\nO\256\216\301\352\17Q"
 #"\230\34\"\240\32510<\206\345x="
 #"\5U\255X\235\252\177\3K\237\373\226\237?(\3466\225\215O;\23\371\2623"
 #"\201]\25i\270\3\n\rI\371\324\326"
 #"\17\242\16:\261\270\f\4|\223l\311"
 #"\323\261\363\227\0\307\264\253\330\\\234F"
 #"\331\302 w?s\354\37`\274\214\261rW\20un\21\221\235\347P\334.V"
 #",2q\240\246\215\35IN\206gE"
 #"\22\231\265\204u\223\16v\36\262\261\276"
 #"\300D\341|\r\211\356\16Z4j\266\215eP^b\6@\335\330;\257:y"
 #"y\21\212s\214\354\230\0\17-\237Mo\20\374\203v\nr\347R\272\302LO"
 #"s\17\256q//<\272\230\323g\257"
 #"\221\235\244\341\324\300\4\267\32U,H"
 #"\230\301\305\323}\234\34\16\321t\326\1"
 #"\203\303n\21\219\\\337+\326>\247\234h\261\313\220'$\"\"{\16\326I"
 #"\342\252\335\262\276v@^\375C\244\262"
 #"\356\2524\266]\23\21\221\3u}\"\212\"{\216v\313\360\250OB\201I\t"
 #"L\6\5\231V\212\224\276\334(\"\"\317\276\335(\233\337;'?\265\f"
 #"\311\213\a\254\"\241\340\264\251\277{8"
 #"\235\36\334R\303\331\36\27\306\271sy"
) 67
(
 #"\240$\2077\327\233A5\375\352\205\5"
 #"\266u\215\262\327\322\201\323\343\347\245\362"
 #"<\262\346\e\377\313\36~\261so\211G\2537P\230\227\36\26\6"
 #"\360'b\224\2?\35\347\313A\0\0\0\0IEND\256B`\202"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"get-faller-images"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 2          17 63 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\373IDAT8\215\245\224[L\323\a\24"
 #"\306\177\355\37A\31\227\321:@\245\204"
 #"\31326\23L\321@\210\310\360\306\315"
 #"\4\205\211\356\241\232-\314K2\361A33\223\2750c\234\3134\213\227-\250"
 #"\211\311\334B\4\225\250a\223i\220a"
 #"h\224YJ\250\211n\200\\\204\325\256"
 #"\212\364F\241\364r\366\260\310\262,\330"
 #"\207}\317\337\371\345\344\234/\237JD\2040:xp7\221\221\221\34:t*"
 #"\234\25u8C}\375\27\244\247g\20\n\2058y\362\363\260\300\210p\206`0"
 #"\210\3135\301\374\371\363Y\273v\303\377"
 #"\333\260\264t%\e6T\223\236\236\211V\253ep\360w6o.\346UWR"
 #"uu\335\226\234\234\2Z[/\21\b\370Y\2748\25\213\245\233\235;\17`4"
 #"\376\214\321\370\v*\225\n\273\335Ne"
 #"\345\26\226/_\305\202\5\257q\342D\35EE%\f\f<\"66\216\274\274"
 #"\325\364\365=@\321\351\22\352,\226_"
 #"\261Z\307P\253\325\304\307'\320\323c"
 #"\"\24\362\321\334\334\304\341\303\337\320\321"
 #"\321Jbb\"\325\325\37\261}\373&\226.}\207'O\6\231\231\231&.\356"
 #"u,\02637n\\#>>\16\245\275\375n]c\343w8\235.\346\315\213"
 #"\300f\263\342\367\373\251\251\331\307\351\323"
 #"_\343\367;\231\232\232\302n\26734"
 #"\364\ez\275\2365k*\350\351\271\213\325:FTT\24^\357$:]*\6"
 #"\303\307\250E\4\235N\307\251S\337\23"
 #"\f\6\351\357\37\300\341p\320\322\322@U\325F\334n\27ii\31dg/#"
 #"**\n\247\323\301\2313_\242\321h\321h\264(\212\302\216\35\373Q"
 #"\24\5\21A\3652\207[\267\226RY\271\211\252\252\0170\233;\271u"
) 500
(
 #"\353't\272T\24E\301j\375\203\204\204\4rs\v0\32\333\361\371|\354\337"
 #"\177\210\316\316V\32\e\e\210\216^\300"
 #"\361\343\347\377~\312K\240\3239N0"
 #"\30\344\342\305s\304\304\304\342\363\371\360"
 #"\371\246IN^\314\310\310\20\212\242\220"
 #"\236\236\211\335\376'^\357$\211\211Ix\275^JK\253HI\311\370olz"
 #"{\273p:_\260j\325:V\256\\\313\360\360\20\331\3319h4\v\261\331l"
 #"\30\215\367HII\303\343q\343p8"
 #"\310\313{\227\262\262\367\210\211\211\243\255"
 #"\355\352,p6\330\27.\234G\243I`\313\26\3##\217q:]\214\217?"
 #"cb\342\5\6C\r\335\335w\31\37\177Ff\346[\364\366\232y\372t\224\276"
 #"\276\207\30\215F\326\257_\377\357\rk"
 #"k\267q\366l\23\261\261\261\230\315]"
 #"\364\364\230\330\265\253\226\351\351)T*"
 #"\25\267o\337 \20\b0::\314\324\224\227\325\253\213\271y\363G&'=T"
 #"Tl$''\237\335\273\337\377\a\250(\nG\216\34 3\363M\306\306F\361"
 #"z\275,[\226\317\345\313\315\344\346\26"
 #"\20\21\21Ajj\32\32\215\226\246\246"
 #"K\24\26\226\223\225\3656~\277\37\217"
 #"\307\215\305b\242\254\254\34\0\245\277\337"
 #"T\267b\305r<\36\17Z\355B\212"
 #"\212Jp\273'\260\333\307\320\353\365\24"
 #"\26\226\363\340\201\t\227\313\211\301\260\a"
 #"\223\351\16))K\350\357\177\310\242E"
 #"KHN^\302\375\373\367\30\36\36\302l6\202\3156*\"\"mmWep"
 #"\360\221tw\337\21\207\343\271\210\21044|+EE+\244\276\376\250\230L\35"
 #"r\345\312y1\233;ED\244\265\265IB\241\220\\\277\376\203<\177n\223\231"
 #"\31\237\370|\323\202\314\241P($\373\366}(\"\"G\217~*\307\216"
 #"}&&S\207\234;\367\225\4\2\376\271\306d6\207s\251\266v\e}"
) 76
(
 #"}\217IJz\203\222\222b\f\206=\250\325s\227T\330>\334\273\367\23ZZ"
 #".\343v\273)(X\367J\330\354\227"
 #"_\245\254,=\321\321\321\344\346\346\223\221\2614\234\235\277\0"
 #"9m\n~\331C\17l\0\0\0\0IEND\256B`\202"
) 0 2          17 63 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           3 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\24\0\0\0\24\b"
 #"\6\0\0\0\215\211\35\r\0\0\3\362IDAT8\215\245\224mL\324\5\34"
 #"\307?\307\35w\340\35\310\311\241\240\300"
 #"!`\2\352\260\210j\250\320\224\204t"
 #"=\250=\b\e\325\254\27\275hZ\353\311\232\1\326r+[k\332\323z\260|"
 #"\230ck\211ez\31\5\370\320\203\210\2\212' \217\36\307I\4\336qO\34"
 #"w\374\177\275h\326\232\243{\321\367\365"
 #"\367\373\331o\373}\367U\211\210\20F\217m\253\5\355L\366U\256\fg%\""
 #"\234a\307''H\233\237F\220 U\3577\206\5j\302\31\\\30i\ri\211"
 #"\212Ig\315J\323\377\273p\336}_\260qm\n\367\2304d\306\371\271\322\337"
 #"Aj\305\21@\2316\243:\331\324)\5K3\370\352x+.%\226\254D8"
 #"\331\356\345\265MK\371\376W;\37]p\23\211\202c\310\300S\e\364\224/0"
 #"\240\213\326Q\271\273\201\322\242,\332{"
 #"\a\231\245\217\245$/\236\346n\17\352P\372\306\352}\3j\372\207\374hQ3"
 #"k\246\236\332\313\23\304\6Fx\367\210\r\313+\371X\32\6\311H\360\261uM"
 #"\6wm\332O~v2\365#\6T\276\0:\243\221\243]Nj\352\332\321\307"
 #"\231P\267\375\370y\265e\357wX}\311\370\r\32\34\327\306q\5\r\274Q\221"
 #"\305\326\17\255D\371G\350\322hh\0375\341\355h!\365\316;([\226\310\17"
 #"\27=\3649~\307g\324\321\245\304\263"
 #"*N\341\371G\226\20\201\b\t\3464"
 #"\316\277\225C\272\253\233\23=q\214\272"
 #"&\370\270\356\nO\257\233MCd\32\205\t1\334\233\343\343Lj.\256\353\1"
 #"\266\177\326\304\224Y\215=s1\231\36/\226\265z<\272\4\220"
 #")T7z\270\250\342 \245\17\227\262}\265\221s\315V\266\2367"
) 500
(
 #"\2606\326\211/\312\300\210m\24\2231"
 #"\232\345\371\251\234>u\231V\335\34,"
 #"O\244p\350\214\203\252\303NR\264\327"
 #"9\266\243\360\257\247\334\0\216\215O\20"
 #"\21\364\363\316\327\335\30g\350\270\32\21"
 #"\215;\b\267\317\234\244a\330\304\244N"
 #"\305\375\361^.\215{q\371\324,\212S\341\361*<^<\asr\374\315\265"
 #"in\355c\304=E\311\262\205\24\27"
 #"dr\245\327\315\342\245\251\230c\242\350"
 #"\37\271\316o\365W\311I\322`\v\350\261\215\353X\235\227LY\311\2L\372)"
 #"\276\251\357\272\31X]\323\317\246\375v"
 #"\334!\37]\326\v8<\n\330\35\\\262\331y}C\nO\256\216\301\352\17Q"
 #"\230\34\"\240\32510<\206\345x="
 #"\5U\255X\235\252\177\3K\237\373\226\237?(\3466\225\215O;\23\371\2623"
 #"\201]\25i\270\3\n\rI\371\324\326"
 #"\17\242\16:\261\270\f\4|\223l\311"
 #"\323\261\363\227\0\307\264\253\330\\\234F"
 #"\331\302 w?s\354\37`\274\214\261rW\20un\21\221\235\347P\334.V"
 #",2q\240\246\215\35IN\206gE"
 #"\22\231\265\204u\223\16v\36\262\261\276"
 #"\300D\341|\r\211\356\16Z4j\266\215eP^b\6@\335\330;\257:y"
 #"y\21\212s\214\354\230\0\17-\237Mo\20\374\203v\nr\347R\272\302LO"
 #"s\17\256q//<\272\230\323g\257"
 #"\221\235\244\341\324\300\4\267\32U,H"
 #"\230\301\305\323}\234\34\16\321t\326\1"
 #"\203\303n\21\219\\\337+\326>\247\234h\261\313\220'$\"\"{\16\326I"
 #"\342\252\335\262\276v@^\375C\244\262"
 #"\356\2524\266]\23\21\221\3u}\"\212\"{\216v\313\360\250OB\201I\t"
 #"L\6\5\231V\212\224\276\334(\"\"\317\276\335(\233\337;'?\265\f"
 #"\311\213\a\254\"\241\340\264\251\277{8"
 #"\235\36\334R\303\331\36\27\306\271sy"
) 67
(
 #"\240$\2077\327\233A5\375\352\205\5"
 #"\266u\215\262\327\322\201\323\343\347\245\362"
 #"<\262\346\e\377\313\36~\261so\211G\2537P\230\227\36\26\6"
 #"\360'b\224\2?\35\347\313A\0\0\0\0IEND\256B`\202"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";; update-faller : number, listof-posn, listof-posn, listof-posn, nu"
 #"mber number -> list-of-posn"
) 0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";; checks if list-of-faller-positions overlaps paddle or hits the bo"
 #"ttom, and then removes the faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; if the number of fallers are less than 20, then maybe adds a fall"
 #"er"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";; moves the list of fallers down the screen by one coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; (define (update-faller paddle faller) ... )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 6 #"faller"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"maybe-add-faller"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 6 #"faller"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 3 #")) "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; because of the randomness, this function is not really testable w"
 #"ith check-expect"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; update-sfaller : number, listof-posn, number-> list-of-posn"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";; checks if listof-shirinking or widening faller-positions overlaps"
 #" paddle or hits the bottom,"
) 0 0 24 29 1 #"\n"
0 0 17 3 30 #";; and then removes the faller"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; moves the list of fallers down the screen by one coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; (define (update-faller paddle faller) ... )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"update-swfaller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; because of the randomness, this function is not really testable w"
 #"ith check-expect"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; move-faller : list-of-posn -> list-of-posn"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; moves the list of fallers down the screen by one coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (define (move-faller fallers) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; - Given (list (make-posn 10 10)), returns (list (make-posn 10 11)"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";; - Given (list (make-posn 10 10) (make-posn 30 50)),"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; returns"
0 0 17 3 44 #" (list (make-posn 10 11) (make-posn (30 51))"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-faller"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"faller-height"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 8 #")))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-faller"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-faller"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"51"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; maybe-add-faller : list-of-posn -> list-of-posn"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; if the length of the list of fallers is less than 20, then maybe "
 #"adds a new faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 65
#";; if the order of fallers is 9 or 19, then add shirinking faller"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; if the order of fallers is 4 or 14, the add widening faller"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; (define (maybe-add-faller fallers) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"maybe-add-faller"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 7 #"sfaller"
0 0 24 3 2 #") "
0 0 14 3 7 #"wfaller"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #" "
0 0 21 3 2 #"14"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 7 #"wfaller"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 4 #")])]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"fnum"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; because of the randomness, this function is not really testable w"
 #"ith check-expect"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; com-diff : number, listof-faller, listof-faller, number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; check if shirinking faller or widening faller hits the paddle"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; if shirinking one hits the paddle, then the size of paddle decrea"
 #"ses by 10"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; if widening one hits the paddle, then the size of paddle increase"
 #"s by 10"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"com-diff"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 2 #") "
0 0 14 3 4 #"diff"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 5 #"])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"com-diff"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"290"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"com-diff"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 3 #"290"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; check-faller : number, list-of-posn, number -> list-of-posn"
0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";; checks if the list of faller hits the bottom, or overlapps paddle"
 #", then removes the faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; (define (check-faller paddle fallers) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; - Given (50 (list (make-posn 10 10)) 10), returns (50 (list (make"
 #"-posn 10 10)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";; - Given (70 (list (make-posn 40 290) (make-posn 60 240)) 10), ret"
 #"urns (70 (make-posn 60 240))"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";; - Given (100 (list (make-posn 80 279))), returns (100 '())"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"faller-height"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 4 #"diff"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #") ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 4 #"diff"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-faller"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 3 #"279"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; get-score : number list-of-posn list-of-posn list-of-posn number "
 #"number -> Number"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; if a faller in the list overlaps paddle, then increases score by "
 #"10 points"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; (define (get-score paddle fallers sfaller wfaller score diff) ..."
 #" )"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; - Given (get-score 50 (list (make-posn 10 10)) '() '() 10 10), re"
 #"turns 10"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; - Given (get-score 100 (list (make-posn 80 279)) '() '() 35 10), "
 #"returns 45"
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-score"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 5 #"score"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-score"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 7 #"sfaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"wfaller"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-score"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 3 #"279"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"35"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 2 #"45"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; collide : number list-of-posn number -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; checks if a fallers in the list overlaps paddle, return #true. if"
 #" not, return #false."
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";; (define (collide paddle fallers) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; - Given (100 (list (make-posn 80 279))), returns #true"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; - Given (140 (list (make-posn 174 280) (make-posn 40 60))), retur"
 #"ns #true"
) 0 0 24 29 1 #"\n"
0 0 17 3 57 #";; - Given (120 (list (make-posn 25 70))), returns #false"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 1 #" "
0 0 14 3 13 #"paddle-height"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"faller-height"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 12 #"world-height"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"faller-height"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"diff"
0 0 24 3 1 #" "
0 0 14 3 12 #"paddle-width"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"faller-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 3 #"279"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 21 3 3 #"140"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"174"
0 0 24 3 1 #" "
0 0 21 3 3 #"280"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 3 #")) "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"collide"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 3 #")) "
0 0 21 3 3 #"-10"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; minus-score : Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; decreases scores by 1 point if the number is greater than 0."
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; (define (minus-score Number) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; - given 0, return 0"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; - Given 10, return 9"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minus-score"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 6 #"number"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minus-score"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minus-score"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; key : (worldState keyEvt) -> worldState"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";; if the key event is \"down\", then switched the direction, and de"
 #"creases score by 1 point."
) 0 0 24 29 1 #"\n"
0 0 17 3 30 #";; (define (key w a-key) ... )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";; - Given ((make-world 100 \"right\" '() 0) \"down\"), returns (mak"
 #"e-world 100 \"left\" '() 0)"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; - Given ((make-world 75 \"left\" '() 10) \"up\"), returns (make-w"
 #"orld 75 \"left\" '() 10) "
) 0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";; - Given ((make-world 50 \"left\" (list (make-posn 10 10) (make-po"
 #"sn 50 10)) 40) \"down\"),"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";; returns"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-world"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"right\""
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 26 #"10) (make-posn 50 10)) 39)"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Strategy : Struct. decomp."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-direction"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 17 #"fallerset-nfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 17 #"fallerset-sfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 17 #"fallerset-wfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 13 #"fallerset-num"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"minus-score"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"world-direction"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 19 3 7 #"\"right\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"world-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 17 #"fallerset-nfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 17 #"fallerset-sfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 17 #"fallerset-wfaller"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 13 #"fallerset-num"
0 0 24 3 2 #" ("
0 0 14 3 13 #"world-fallers"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"minus-score"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 3 #"150"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 2 #"20"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 3 #"150"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 19 3 7 #"\"right\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 2 #"20"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 3 #"150"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 7 #"\"right\""
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 2 #"20"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"down\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 3 #"150"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 19 3 6 #"\"left\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 2 #"20"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-width"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-fallerset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 21 3 5 #"1/200"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 4 #"draw"
0 0 24 3 2 #"])"
0           0
